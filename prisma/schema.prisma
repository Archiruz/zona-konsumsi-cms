// This is your Prisma schema file for PostgreSQL production deployment,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(cuid())
  name         String
  email        String      @unique
  password     String
  role         Role        @default(EMPLOYEE)
  nip          String?     @unique // 9-digit employee code
  position     String?
  departmentId String?
  department   Department? @relation(fields: [departmentId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  lastLogin    DateTime?

  // Relations
  consumptionRecords ConsumptionRecord[]
  stockAdjustments   StockAdjustment[]

  @@index([departmentId])
}

model Department {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  users User[]
}

model ConsumptionType {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  period      Period   @default(WEEKLY)
  limit       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  items ConsumptionItem[]
}

model ConsumptionItem {
  id                String              @id @default(cuid())
  name              String
  description       String?
  purchaseDate      DateTime
  photo             String?
  consumptionTypeId String
  consumptionType   ConsumptionType     @relation(fields: [consumptionTypeId], references: [id], onDelete: Cascade)
  records           ConsumptionRecord[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  stock             Int                 @default(0)
  stockAdjustments  StockAdjustment[]

  @@index([consumptionTypeId])
}

model ConsumptionRecord {
  id                String   @id @default(cuid())
  userId            String
  itemId            String
  quantity          Int
  date              DateTime @default(now())
  photo             String?
  notes             String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  item   ConsumptionItem @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([itemId])
}

model StockAdjustment {
  id        String   @id @default(cuid())
  change    Int
  reason    String?
  createdAt DateTime @default(now())

  itemId String
  item   ConsumptionItem @relation(fields: [itemId], references: [id], onDelete: Cascade)
  userId String
  user   User            @relation(fields: [userId], references: [id])

  @@index([itemId])
  @@index([userId])
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Period {
  WEEKLY
  MONTHLY
}
